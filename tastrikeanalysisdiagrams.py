# -*- coding: utf-8 -*-
"""TAStrikeAnalysisDiagrams.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vJ1dSbJ33pi2qg5EMpTF-yFEQnKLu2Mq
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import altair as alt
from datetime import date
import matplotlib.pyplot as plt
import numpy as np
!pip install matplotlib --upgrade
!pip install -U matplotlib
 
# %matplotlib inline

df1=pd.DataFrame(np.array([[1, 2, 9.3], [4, 5, 8.1], [7, 8, 10.6], [1,2,12],[2,3,13.2],[2,4,13.7], [1,2,10.6]]),index=["Week0", "Week1","Week2","Week3","Week4", "Week5", "Week6"],columns=["Discord","Twitter","Reddit"])
df2=pd.DataFrame(np.array([[1, 2, 79.8], [4, 5, 80.1], [7, 8, 79.5], [1,2,77.6],[2,3,75.7],[2,4,76], [1,2,79.5]]),index=["Week0", "Week1","Week2","Week3","Week4", "Week5", "Week6"],columns=["Discord","Twitter","Reddit"])
df3=pd.DataFrame(np.array([[1, 2, 10.9], [4, 5, 11.8], [7, 8, 9.9], [1,2,10.5],[2,3,11.1],[2,4,10.3], [1,2,9.9]]),index=["Week0", "Week1","Week2","Week3","Week4", "Week5", "Week6"],columns=["Discord","Twitter","Reddit"])
def prep_df(df, name):
    df = df.stack().reset_index()
    df.columns = ['c1', 'c2', 'values']
    df['DF'] = name
    return df
df1 = prep_df(df1, 'Negative')
df2 = prep_df(df2, 'Neutral')
df3 = prep_df(df3, 'Positive')

df = pd.concat([df1, df2, df3])

alt.Chart(df).mark_bar().encode(

    x=alt.X('c2:N', title=None),

    y=alt.Y('sum(values):Q',
        axis=alt.Axis(
            grid=False,
            title=None)),

    column=alt.Column('c1:N', title="Percent Analysis of Responses to the TA Strike from Discord, Reddit, and Twitter"),

    color=alt.Color('DF:N',
            scale=alt.Scale(
                range=['#ff6f69', '#ffcc5c','#96ceb4'],
            ),
        ))\
    .configure_view(
        strokeOpacity=0    
    )

pip install -U matplotlib

pip install matplotlib==3.1.1

dates = [date(2022, 11, 7), date(2022, 11, 14), date(2022,11,21), 
         date(2022,11,28), date(2022,12,5), date(2022, 12, 12), date(2022,12,19), date(2022, 12, 25)]
min_date = date(np.min(dates).year, np.min(dates).month, np.min(dates).day-5)
max_date = date(np.max(dates).year, np.max(dates).month, np.max(dates).day+5)
 
labels = ['Week 0: Pre-Strike', 'Week 1: Strike Starts', 'Week 2: Strike', 'Week 3: Students Express Opinions', 
          'Week 4: Strikes Become\nDisruptive to Students\nDuring Finals', 'Week 5: Winter Break Starts', 'Week 6: UCs reach\ntentative agreement', 
          'Strike Ends']
# labels with associated dates
labels = ['{0:%d %b %Y}:\n{1}'.format(d, l) for l, d in zip (labels, dates)]


fig, ax = plt.subplots(figsize=(15, 4), constrained_layout=True)
_ = ax.set_ylim(-2, 1.75)
_ = ax.set_xlim(min_date, max_date)
_ = ax.axhline(0, xmin=0.05, xmax=0.95, c='purple', zorder=1)
 
_ = ax.scatter(dates, np.zeros(len(dates)), s=120, c='yellow', zorder=2)
_ = ax.scatter(dates, np.zeros(len(dates)), s=30, c='darkblue', zorder=3)

stems = np.zeros(len(dates))
stems[::2] = 0.3
stems[1::2] = -0.3   
markerline, stemline, baseline = ax.stem(dates, stems, use_line_collection=True)
_ = plt.setp(markerline, marker=',', color='darkblue')
_ = plt.setp(stemline, color='darkblue')

stems = np.zeros(len(dates))
stems[::2] = 0.3
stems[1::2] = -0.3   
markerline, stemline, baseline = ax.stem(dates, stems, use_line_collection=True)
_ = plt.setp(markerline, marker=',', color='darkblue')
_ = plt.setp(stemline, color='darkblue')
label_offsets = np.zeros(len(dates))
label_offsets[::2] = 0.35
label_offsets[1::2] = -0.7
for i, (l, d) in enumerate(zip(labels, dates)):
    _ = ax.text(d, label_offsets[i], l, ha='center', fontfamily='serif', fontweight='bold', color='royalblue',fontsize=12)

import numpy as np
import matplotlib.pyplot as plt
from matplotlib.markers import MarkerStyle
from matplotlib.transforms import Affine2D
from matplotlib.textpath import TextPath
from matplotlib.colors import Normalize

from matplotlib.markers import MarkerStyle
from matplotlib.transforms import Affine2D
from matplotlib.textpath import TextPath
from matplotlib.colors import Normalize

SUCCESS_SYMBOLS = [
    TextPath((0, 0), "â˜¹"),
    TextPath((0, 0), "ðŸ˜’"),
    TextPath((0, 0), "â˜º"),
]

N = 25
np.random.seed(42)
skills = np.random.uniform(5, 80, size=N) * 0.1 + 5
takeoff_angles = np.random.normal(0, 90, N)
thrusts = np.random.uniform(size=N)
successful = np.random.randint(0, 3, size=N)
positions = np.random.normal(size=(N, 2)) * 5
data = zip(skills, takeoff_angles, thrusts, successful, positions)

cmap = plt.colormaps["plasma"]
fig, ax = plt.subplots()
fig.suptitle("Throwing success", size=14)
for skill, takeoff, thrust, mood, pos in data:
    t = Affine2D().scale(skill).rotate_deg(takeoff)
    m = MarkerStyle(SUCCESS_SYMBOLS[mood], transform=t)
    ax.plot(pos[0], pos[1], marker=m, color=cmap(thrust))
ax.set_xlabel("X position [m]")
ax.set_ylabel("Y position [m]")

plt.show()